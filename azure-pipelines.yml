# Azure Pipelines YAML documentation
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema%2Cparameter-schema


# this file defines a set of jobs that will run when triggered on a cloned version of your repo
# a job is a set of steps
# by default, there is just one job, and you give it a list of steps

# by default, all branches get built
# but adding a trigger configuration like this says "only build master branch"
trigger:
- master

# a pool is a set of machines for running this job
# this configuration says: "use Microsoft's hosted Ubuntu Linux virtual machines"
# (we could if we wanted, have it connect to a machine WE control to run the job on)
pool:
  vmImage: 'ubuntu-latest'

# the steps in the job
# scripts is one kind of step - on linux itll run in bash
# on windows itll run in command prompt
# give all steps a good display name
steps:
- script: echo Hello, world!
  displayName: Print Hello World

- script: |
    echo "Showing current directory contents"
    ls
  displayName: Show directory contents

- script: dotnet build *.sln
  workingDirectory: ./PaulsUsedGoods.WebApp
  displayName: dotnet build

- script: dotnet test
  continueOnError: true
  displayName: dotnet test

# the default condition for every step is "succeeded" - run this step if the previous step suceeded
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

# we can publish test results to azure pipelines
# have the build agent (the machine running the steps) notify azure pipelines of that useful info to keep alongside the logs

# other than scripts, there are also "task" steps
# a task step implements common build operations that would be clumsy to write out in a script step



# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
