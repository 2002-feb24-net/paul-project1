
trigger:
- master

stages:
- stage: build

  jobs:
  - job: build

    pool:
      vmImage: 'ubuntu-latest'

    steps:

    - script: echo Hello, world!
      displayName: Print Hello World

    - script: |
        echo "Showing current directory contents"
        ls
      displayName: Show directory contents

    - script: dotnet build *.sln
      workingDirectory: ./PaulsUsedGoods.WebApp
      displayName: dotnet build

    - script: dotnet test --logger trx
      continueOnError: true
      displayName: dotnet test

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
      displayName: Publish Test results to build

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
    #zipafterpublish being true is default
        zipAfterPublish: true
      displayName: dotnet publish to zip

    - publish: 
      artifact: WebApp

    # this looks for a zip file and deploys to azure app service
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure subscription (Pay As You Go (Hopefully)(0898d619-ccf0-4843-99d4-f17ed331e0f4)'
        appType: 'webApp'
        WebAppName: 'PaulsUsedGoodsWebApp'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
      displayName: Deploy to Azure App service

  - job: test

    pool:
      vmImage: 'windows-latest'

    steps:
    
    - script: dotnet test --collect:"XPlat Code Coverage" --logger trx
      displayName: dotnet test

    - task: DotNetCoreCLI@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
      displayName: Publish test results to build
      
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '**/coverlet/reports/Cobertura.xml' 